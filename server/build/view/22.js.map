{"version":3,"sources":["./node_modules/@aws-amplify/ui-components/dist/esm/amplify-s3-image.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0E;AAC/B;AACoB;AAC9B;AACH;AAC+D;;AAE7F,iCAAiC,eAAe,cAAc,iBAAiB,gBAAgB,IAAI,qBAAqB,mBAAmB;;AAE3I,mBAAmB,wDAAM;AACzB;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA,qBAAqB,4DAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4DAA4D;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sEAAgB;AACtC;AACA,6BAA6B,sEAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAC,CAAC,oDAAI,oBAAoB,4DAAC,SAAS,wEAAwE;AAC5H;AACA,2BAA2B;AAC3B;AACA,MAAM;AACN;AACA;;AAE8C","file":"22.js","sourcesContent":["import { r as registerInstance, h, H as Host } from './index-3fb5c139.js';\nimport { Logger } from '@aws-amplify/core';\nimport { A as AccessLevel } from './storage-types-f257c0f2.js';\nimport './constants-d1abe7de.js';\nimport '@aws-amplify/storage';\nimport { p as putStorageObject, g as getStorageObject } from './storage-helpers-48c373a0.js';\n\nconst amplifyS3ImageCss = \":host{height:inherit;width:inherit;--height:inherit;--width:inherit}img{height:var(--height);width:var(--width)}\";\n\nconst logger = new Logger('S3Image');\nconst AmplifyS3Image = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** The content type header used when uploading to S3 */\n        this.contentType = 'binary/octet-stream';\n        /** The access level of the image */\n        this.level = AccessLevel.Public;\n    }\n    async watchHandler() {\n        await this.load();\n    }\n    async componentWillLoad() {\n        await this.load();\n    }\n    async load() {\n        const { imgKey, path, body, contentType, level, track, identityId } = this;\n        if (!imgKey && !path) {\n            logger.debug('empty imgKey and path');\n            return;\n        }\n        const key = imgKey || path;\n        logger.debug('loading ' + key + '...');\n        try {\n            if (body) {\n                await putStorageObject(imgKey, body, level, track, contentType, logger);\n            }\n            this.src = await getStorageObject(key, level, track, identityId, logger);\n        }\n        catch (err) {\n            logger.debug(err);\n            throw new Error(err);\n        }\n    }\n    render() {\n        return (h(Host, null, this.src && h(\"img\", { src: this.src, onLoad: this.handleOnLoad, onError: this.handleOnError })));\n    }\n    static get watchers() { return {\n        \"body\": [\"watchHandler\"]\n    }; }\n};\nAmplifyS3Image.style = amplifyS3ImageCss;\n\nexport { AmplifyS3Image as amplify_s3_image };\n"],"sourceRoot":"webpack:///"}