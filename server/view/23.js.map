{"version":3,"sources":["./node_modules/@aws-amplify/ui-components/dist/esm/amplify-s3-text-picker.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0E;AACzB;AACc;AACpC;AACoC;AAC9B;AACH;AACsD;;AAEpF,mBAAmB,wDAAM;AACzB;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA,qBAAqB,4DAAW;AAChC;AACA,4BAA4B,2DAAY;AACxC;AACA;AACA;AACA,eAAe,qCAAqC;AACpD,2BAA2B,sEAAO;AAClC;AACA;AACA;AACA;AACA,kBAAkB,sEAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAC,CAAC,oDAAI,QAAQ,4DAAC,qBAAqB,qJAAqJ,sDAAI,yBAAyB,GAAG,4DAAC,oBAAoB,gEAAgE;AAC9T;AACA;;AAEyD","file":"23.js","sourcesContent":["import { r as registerInstance, h, H as Host } from './index-3fb5c139.js';\nimport { Logger, I18n } from '@aws-amplify/core';\nimport { A as AccessLevel } from './storage-types-f257c0f2.js';\nimport '@aws-amplify/auth';\nimport { T as Translations } from './Translations-c833f663.js';\nimport './constants-d1abe7de.js';\nimport '@aws-amplify/storage';\nimport { c as calcKey, p as putStorageObject } from './storage-helpers-48c373a0.js';\n\nconst logger = new Logger('S3TextPicker');\nconst AmplifyS3TextPicker = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** The content type header used when uploading to S3 */\n        this.contentType = 'text/*';\n        /** The access level of the text file */\n        this.level = AccessLevel.Public;\n        /** Fallback content for aplify-s3-text */\n        this.fallbackText = Translations.PICKER_TEXT;\n    }\n    async handleInput(event) {\n        const file = event.target.files[0];\n        const { path = '', level, fileToKey, track } = this;\n        const key = path + calcKey(file, fileToKey);\n        if (!file) {\n            throw new Error('No file was selected');\n        }\n        try {\n            await putStorageObject(key, file, level, track, file['type'], logger);\n            this.src = key;\n        }\n        catch (error) {\n            logger.debug(error);\n            throw new Error(error);\n        }\n    }\n    render() {\n        return (h(Host, null, h(\"amplify-s3-text\", { textKey: this.src, path: this.path, level: this.level, track: this.track, identityId: this.identityId, contentType: this.contentType, fallbackText: I18n.get(this.fallbackText) }), h(\"amplify-picker\", { inputHandler: e => this.handleInput(e), acceptValue: 'text/*' })));\n    }\n};\n\nexport { AmplifyS3TextPicker as amplify_s3_text_picker };\n"],"sourceRoot":"webpack:///"}